##version: '3.8'

services:

  database:
    image: postgres:alpine
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: APP
      POSTGRES_PASSWORD: APP
      POSTGRES_DB: labprog

  # 10.000km

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/app
      - ../common/backend/m2:/root/.m2
    working_dir: /app
    command: sh run.sh
    ports:
      - 8080:8080
      - 35729:35729
      - 5005:5005
    depends_on:
      - database

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ### --- SEGUIR INSTRUCIVO AQUI ####
    # -- Comentar luego de ng new
    #working_dir: /home/node
    # -- Descomentar luego de ng new
    working_dir: /home/node/cli
    command: ng serve --host=0.0.0.0
    ### ------------------------- ####
    restart: always
    ports:
      - "4200:4200"
    # stdin_open y tty mantienen el servidor funcionando sin commandos en ejecución
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/home/node
      # Activar lo siguiente luego del taller End-to-end
      # depends_on: 
      # - backend

  testing:
    image: node:alpine
    container_name: testing
    profiles:
      - test
    working_dir: /home/node
    volumes:
      - ./testing/personas:/home/node/personas
      - ./testing/divisiones:/home/node/divisiones
      - ./testing/cargo:/home/node/cargo
      - ./testing/designacion:/home/node/designacion
      - ./testing/personas/node_modules:/home/node/personas/node_modules
      - ./testing/divisiones/node_modules:/home/node/divisiones/node_modules
      - ./testing/cargo/node_modules:/home/node/cargo/node_modules
      - ./testing/designacion/node_modules:/home/node/designacion/node_modules
    command: sh -c " echo '▶️  Ejecutando test de PERSONAS'; \ cd personas && npm test; \ echo '▶️  Ejecutando test de DIVISIONES'; \ cd ../divisiones && npm test; \ echo '▶️  Ejecutando test de CARGOS'; \ cd ../cargo && npm test; \ echo '▶️  Ejecutando test de DESIGNACIONES'; \ cd ../designacion && npm test;"
    depends_on:
      - backend

volumes:
  postgres:
